{"title":"arts_second_week","date":"2019-10-11T14:27:08.000Z","link":"2019/10/11/arts-second-week","tags":["arts"],"updated":"2019-10-13T13:07:13.977Z","content":"<h1 id=\"A\">A<a href=\"2019/10/11/arts-second-week#A\"></a></h1><p><a href=\"https://github.com/youguanxinqing/RoadOfDSA/blob/master/LeetCode/001/two_sum.go\" target=\"_blank\" rel=\"noopener\">两数之和</a></p>\n<p>(第一次用 Go 来写，不如 Py 顺手。要克服。)</p>\n<h1 id=\"R\">R<a href=\"2019/10/11/arts-second-week#R\"></a></h1><p><a href=\"https://medium.com/free-code-camp/an-a-z-of-useful-python-tricks-b467524ee747?source=search_post---------3\" target=\"_blank\" rel=\"noopener\">An A-Z of useful Python tricks</a></p>\n<p>作者是一名数据分析师，对 Python 多少有些偏爱。</p>\n<p>在这篇文章中，作者一共介绍了 a-z 个与 Python 相关的小技巧。其中有语法层面的(列表推导式，操作符重载…)，标准库使用上的(OrderedDict，Queue…)，第三方趣味包(newspaper3k，wikipedia…很遗憾这些东西国内不能丝滑般享用)、实用工具包(sh，pyyaml)，还有一些周边(Jedi，Virtual environments…)。</p>\n<p>不得不说，作者为了附和标题，内容上与文章结构上让我觉着有些欠缺–至少 tricks 的介绍没有物以类分，散乱了；基本没有深度，浅尝则止。好在整篇文章读下来，仍让一个靠 Python 吃了一年饭的人以为收获颇丰。</p>\n<p>总之，Python 本就以库多著称，也因此大大提高了使用者的开发效率。但我觉得很多人都把这一优点遗忘了，甚至加以鄙视，大有买椟还珠的嫌疑。</p>\n<h1 id=\"T\">T<a href=\"2019/10/11/arts-second-week#T\"></a></h1><p><a href=\"http://youguanxinqing.xyz/index.php/archives/104/\" target=\"_blank\" rel=\"noopener\">在 vim 中跳转到 py 源码</a></p>\n<h1 id=\"S\">S<a href=\"2019/10/11/arts-second-week#S\"></a></h1><p><a href=\"https://www.hongweipeng.com/index.php/archives/1619/\" target=\"_blank\" rel=\"noopener\">Python 如何跳出两层循环</a></p>\n","next":{"title":"arts_first_week","link":"2019/10/06/arts-first-week"},"plink":"http://yoursite.com/2019/10/11/arts-second-week/","toc":[{"title":"A","id":"A","index":"1"},{"title":"R","id":"R","index":"2"},{"title":"T","id":"T","index":"3"},{"title":"S","id":"S","index":"4"}]}