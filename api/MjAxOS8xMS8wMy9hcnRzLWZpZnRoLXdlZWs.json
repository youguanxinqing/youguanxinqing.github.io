{"title":"arts_fifth_week","date":"2019-11-03T09:58:07.000Z","link":"2019/11/03/arts-fifth-week","tags":["arts"],"updated":"2019-11-03T13:00:41.576Z","content":"<h1 id=\"A\">A<a href=\"2019/11/03/arts-fifth-week#A\"></a></h1><p>题：<a href=\"https://leetcode-cn.com/problems/binary-tree-inorder-traversal/submissions/\" target=\"_blank\" rel=\"noopener\">Binary Tree Inorder Traversal</a><br>解：<a href=\"https://github.com/youguanxinqing/RoadOfDSA/blob/master/LeetCode/094/binary_tree_inorder_traversal.go\" target=\"_blank\" rel=\"noopener\">binary_tree_inorder_traversal.go</a></p>\n<h1 id=\"R\">R<a href=\"2019/11/03/arts-fifth-week#R\"></a></h1><p><a href=\"https://github.com/uber-go/guide/blob/master/style.md\" target=\"_blank\" rel=\"noopener\">Uber Go Style Guide</a></p>\n<p>Go 代码风格指南，Uber 出品。</p>\n<p>该指南旨在这样编程：既使用 Go 语言特性，又避免其特性带来的易错点。且通过左右对比的方式，使得什么是 <strong>Bad</strong>，什么是 <strong>Good</strong>，一目了然。</p>\n<p>总之，值得深度学习。</p>\n<h1 id=\"T\">T<a href=\"2019/11/03/arts-fifth-week#T\"></a></h1><p>在 Django 2.1 中，实现一个下载文件的功能。其操作无非是设置请求头而已，也就是 <strong>Content-Type</strong> 和 <strong>Content-Disposition</strong>。</p>\n<figure class=\"highlight python\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">name = <span class=\"string\">\"tmp.txt\"</span></span><br><span class=\"line\">response = HttpResponse(fin)                                                 </span><br><span class=\"line\">response[<span class=\"string\">'Content-Type'</span>] = <span class=\"string\">'application/octet-stream'</span>                        </span><br><span class=\"line\">response[<span class=\"string\">'Content-Disposition'</span>] = <span class=\"string\">f'attachment; filename=<span class=\"subst\">&#123;name&#125;</span>'</span></span><br><span class=\"line\"><span class=\"keyword\">return</span> response</span><br></pre></td></tr></table></div></figure>\n\n<p>然而测试时我发现，当文件名为中文时，文件不能正常被下载。网上说需要 <code>filename=utf-8&#39;&#39;+{name}</code>，但发现不行。经同事帮助，得知使用 urlquote 即可。完整示例代码如下：</p>\n<figure class=\"highlight python\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> django.http <span class=\"keyword\">import</span> HttpResponse</span><br><span class=\"line\"><span class=\"keyword\">from</span> django.utils.http <span class=\"keyword\">import</span> urlquote</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">download</span><span class=\"params\">(request)</span>:</span></span><br><span class=\"line\">    <span class=\"comment\"># eg: path = '/tmp/这是一个中文名字的文件.txt'</span></span><br><span class=\"line\">    path = request.GET.get(<span class=\"string\">\"path\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> path <span class=\"keyword\">or</span> <span class=\"keyword\">not</span> os.path.exists(path):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> HttpResponse(<span class=\"string\">\"no data\"</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">with</span> open(path, <span class=\"string\">\"rb\"</span>) <span class=\"keyword\">as</span> fin:                                                    </span><br><span class=\"line\">        response = HttpResponse(fin)                                                 </span><br><span class=\"line\">        response[<span class=\"string\">'Content-Type'</span>] = <span class=\"string\">'application/octet-stream'</span>                        </span><br><span class=\"line\">        response[<span class=\"string\">'Content-Disposition'</span>] = <span class=\"string\">f'attachment;filename=<span class=\"subst\">&#123;urlquote(os.path.basename(path))&#125;</span>'</span>    </span><br><span class=\"line\">        <span class=\"keyword\">return</span> response</span><br></pre></td></tr></table></div></figure>\n\n<h1 id=\"S\">S<a href=\"2019/11/03/arts-fifth-week#S\"></a></h1><p><a href=\"https://github.com/true1023/Crazy-Python\" target=\"_blank\" rel=\"noopener\">Crazy-Python</a></p>\n","next":{"title":"arts_four_week","link":"2019/10/25/arts-four-week"},"plink":"http://yoursite.com/2019/11/03/arts-fifth-week/","toc":[{"title":"A","id":"A","index":"1"},{"title":"R","id":"R","index":"2"},{"title":"T","id":"T","index":"3"},{"title":"S","id":"S","index":"4"}]}