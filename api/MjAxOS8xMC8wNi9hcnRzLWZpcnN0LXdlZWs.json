{"title":"arts_first_week","date":"2019-10-06T12:08:35.000Z","link":"2019/10/06/arts-first-week","tags":["arts"],"updated":"2019-10-06T12:39:33.681Z","content":"<h1 id=\"A\">A<a href=\"2019/10/06/arts-first-week#A\"></a></h1><p>关于 3n+1 问题引发的缓存思想。<a href=\"http://youguanxinqing.xyz/index.php/archives/102/\" target=\"_blank\" rel=\"noopener\">详见</a></p>\n<figure class=\"highlight cpp\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">size_t</span> solve_3nplus1_cache(<span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">size_t</span>&gt;&amp; v, <span class=\"keyword\">size_t</span> n);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">size_t</span> solve_3nplus1(<span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">size_t</span>&gt;&amp; v, <span class=\"keyword\">size_t</span> n)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    v[<span class=\"number\">1</span>] = <span class=\"number\">1</span>;  <span class=\"comment\">/* 设置出口 */</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> solve_3nplus1_cache(v, n) - <span class=\"number\">1</span>;  <span class=\"comment\">/* 由于v[1]=1, 所以最后需要减1 */</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">size_t</span> solve_3nplus1_cache(<span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">size_t</span>&gt;&amp; v, <span class=\"keyword\">size_t</span> n)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">size_t</span> l = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"comment\">/* 防越界 */</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> (n &gt;= v.size()) &#123;</span><br><span class=\"line\">        n = (n%<span class=\"number\">2</span> == <span class=\"number\">0</span>) ? n/<span class=\"number\">2</span> : <span class=\"number\">3</span>*n+<span class=\"number\">1</span>;</span><br><span class=\"line\">        ++l;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (v[n] == <span class=\"number\">0</span>)</span><br><span class=\"line\">        v[n] = solve_3nplus1_cache(v, (n%<span class=\"number\">2</span> == <span class=\"number\">0</span>) ? n/<span class=\"number\">2</span> : <span class=\"number\">3</span>*n+<span class=\"number\">1</span>) + <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (n != <span class=\"number\">1</span>)  <span class=\"comment\">/* 避免 n = 1 的影响 */</span></span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"从缓存中取得... n = \"</span> &lt;&lt; n &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> v[n] + l;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n\n<h1 id=\"R\">R<a href=\"2019/10/06/arts-first-week#R\"></a></h1><p><a href=\"https://docs.python.org/3/library/pdb.html\" target=\"_blank\" rel=\"noopener\">pdb — The Python Debugger</a></p>\n<p>Python pdb 官方文档，详细讲述了其操作方法。终端调试 Python 程序成为可能。缺点在于 pdb 的输出全是白色，不利阅读，也许可以考虑 ipdb（pip3 install ipdb -i <a href=\"https://pypi.douban.com/simple/）。\" target=\"_blank\" rel=\"noopener\">https://pypi.douban.com/simple/）。</a></p>\n<p>有两种调试方法我是比较推荐的：</p>\n<p>命令行参数执行，完整运行一次后会重启程序。</p>\n<figure class=\"highlight bash\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python3 -m pdb myscript.py</span><br></pre></td></tr></table></div></figure>\n\n<p>Python shell 中执行，pdb.pm() 可以快速断点到问题代码。</p>\n<figure class=\"highlight bash\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; import pdb</span><br><span class=\"line\">&gt;&gt;&gt; import mymodule</span><br><span class=\"line\">&gt;&gt;&gt; mymodule.test()</span><br><span class=\"line\">Traceback (most recent call last):</span><br><span class=\"line\">  File <span class=\"string\">\"&lt;stdin&gt;\"</span>, line 1, <span class=\"keyword\">in</span> &lt;module&gt;</span><br><span class=\"line\">  File <span class=\"string\">\"./mymodule.py\"</span>, line 4, <span class=\"keyword\">in</span> <span class=\"built_in\">test</span></span><br><span class=\"line\">    test2()</span><br><span class=\"line\">  File <span class=\"string\">\"./mymodule.py\"</span>, line 3, <span class=\"keyword\">in</span> test2</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(spam)</span><br><span class=\"line\">NameError: spam</span><br><span class=\"line\">&gt;&gt;&gt; pdb.pm()</span><br><span class=\"line\">&gt; ./mymodule.py(3)test2()</span><br><span class=\"line\">-&gt; <span class=\"built_in\">print</span>(spam)</span><br><span class=\"line\">(Pdb)</span><br></pre></td></tr></table></div></figure>\n\n<h1 id=\"T\">T<a href=\"2019/10/06/arts-first-week#T\"></a></h1><p><a href=\"http://youguanxinqing.xyz/index.php/archives/103/\" target=\"_blank\" rel=\"noopener\">MAC-快捷键打开终端</a></p>\n<h1 id=\"S\">S<a href=\"2019/10/06/arts-first-week#S\"></a></h1><p><a href=\"https://www.hongweipeng.com/index.php/archives/1528/\" target=\"_blank\" rel=\"noopener\">深度剖析凭什么python中整型不会溢出</a></p>\n","next":{"title":"Hello World","link":"2019/09/30/hello-world"},"plink":"http://yoursite.com/2019/10/06/arts-first-week/","toc":[{"title":"A","id":"A","index":"1"},{"title":"R","id":"R","index":"2"},{"title":"T","id":"T","index":"3"},{"title":"S","id":"S","index":"4"}]}